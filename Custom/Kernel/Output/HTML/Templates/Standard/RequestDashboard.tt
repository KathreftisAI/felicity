# --
# Copyright (C) 2001-2017 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --


<script src="[% Config("Frontend::WebPath") %]js/thirdparty/highchart/highcharts.js"></script>
<script src="[% Config("Frontend::WebPath") %]js/thirdparty/highchart/exporting.js"></script>
<script src="[% Config("Frontend::WebPath") %]js/thirdparty/highchart/export-data.js"></script>
<script src="[% Config("Frontend::WebPath") %]js/thirdparty/highchart/highcharts-3d.js"></script>
<script src="[% Config("Frontend::WebPath") %]js/thirdparty/highchart/heatmap.js"></script>
<script src="[% Config("Frontend::WebPath") %]js/thirdparty/highchart/drilldown.js"></script>

<div class="spacer20"></div>

	<div class="col-md-4 text-center">
		<div class="panel panel-default">
			<div class="panel-heading">Critical Open In </div>
			<div class="info-box">
				<div class="col-md-6 location" onclick="location.href='[% Env('Baselink') %]Action=AgentRequest;ColumnFilterPriority=1;ColumnFilterState=4;Filter=All;ColumnFilterOwner=[% Data.OwnerID %];'">
					<h4>For me</strong></h4>
					<h1 class="text-danger">[% Data.TicketCounts.CriticalOpen %]</h1>
				</div>
				<div class="col-md-6">
					<h4>For all</strong></h4>
					<h1 class="text-danger">[% Data.TicketCounts.criticalrequest %]</h1>
				</div>
				<div class="clearfix"></div>
			</div>
		</div>
	</div>
	<div class="col-md-4 text-center">
		<div class="panel panel-default">
			<div class="panel-heading">Unassigned Requests</div>
			<div class="info-box">
				<div class="col-md-6 location" onclick="location.href='[% Env('Baselink') %]Action=AgentRequest;ColumnFilterLock=1;Filter=All;ColumnFilterOwner=[% Data.OwnerID %];'">
					<h4>For me</h4>
					<h1 class="text-danger">[% Data.TicketCounts.Unassigned %]</h1>
				</div>
				<div class="col-md-6">
					<h4>For all</h4>
					<h1 class="text-danger">[% Data.TicketCounts.UnassignedRequest %]</h1>
				</div>
				<div class="clearfix"></div>
			</div>
		</div>
	</div>
	<div class="col-md-4 text-center">
		<div class="panel panel-default">
			<div class="panel-heading">Overdue Requests </div>
			<div class="info-box">
				<div class="col-md-6 location" onclick="location.href='[% Env('Baselink') %]Action=RequestEscalation;ColumnFilterOwner=[% Data.OwnerID %];'">
					<h4>For me</h4>
					<h1 class="text-danger">[% Data.TicketCounts.Overdue %]</h1>
				</div>
				<div class="col-md-6">
					<h4>For all</h4>
					<h1 class="text-danger">[% Data.TicketCounts.OverdueRequest %]</h1>
				</div>
				<div class="clearfix"></div>
			</div>
		</div>
	</div>

	<div class="clearfix" style="height: 20px;"></div>

	<div class="col-md-4 text-center">
		<div class="panel panel-default">
			<div class="panel-heading">Open Requests</div>
			<div class="info-box">
				<div class="col-md-6 location" onclick="location.href='[% Env('Baselink') %]Action=AgentRequest;ColumnFilterState=4;Filter=All;ColumnFilterOwner=[% Data.OwnerID %];'">
					<h4>For me</h4>
					<h1>[% Data.TicketCounts.Open %]</h1>
				</div>
				<div class="col-md-6">
					<h4>For all</h4>
					<h1>[% Data.TicketCounts.Openrequest %]</h1>
				</div>
				<div class="clearfix"></div>
			</div>
		</div>
	</div>
	<div class="col-md-4 text-center">
		<div class="panel panel-default">
			<div class="panel-heading">Requests not Updated for 7 days</div>
			<div class="info-box">
				<div class="col-md-6 location" onclick="location.href='[% Env('Baselink') %]Action=AgentRequest;ColumnFilterOwner=[% Data.OwnerID %];'">
					<h4>For me</h4>
					<h1>[% Data.TicketCounts.SevenDayUpdate %]</h1>
				</div>
				<div class="col-md-6">
					<h4>For all</h4>
					<h1>[% Data.TicketCounts.sevendayrequestticket %]</h1>
				</div>
				<div class="clearfix"></div>
			</div>
		</div>
	</div>
	<div class="col-md-4 text-center">
		<div class="panel panel-default">
			<div class="panel-heading">Open Request Older Than 30 days </div>
			<div class="info-box">
				<div class="col-md-6 location" onclick="location.href='[% Env('Baselink') %]Action=AgentRequest;Filter=All;ColumnFilterOwner=[% Data.OwnerID %];'">
					<h4>For me</h4>
					<h1>[% Data.TicketCounts.ThirtyDayUpdate %]</h1>
				</div>
				<div class="col-md-6">
					<h4>For all</h4>
					<h1>[% Data.TicketCounts.ThirtyDaysrequestticket %]</h1>
				</div>
				<div class="clearfix"></div>
			</div>
		</div>
	</div>

	<div class="clearfix" style="height: 20px;"></div>



	<div class="col-md-6">
	    <div class="panel panel-default">
			<div id="stateBarReqDiv" style="height: 400px;"></div>
	    </div>
	</div>

	<div class="col-md-6">
	    <div class="panel panel-default">
	        <div id="openRequest" style="height: 400px;"></div>
	    </div>
	</div>

	<div class="col-md-6">
	    <div class="panel panel-default">
	        <div id="OpenCloseStateReqDiv" style="height: 400px;"></div>
	    </div>
	</div>

	<div class="col-md-6">
	    <div class="panel panel-default">
	       <div id="matrixRequestDiv" style="height: 400px;"></div>
	    </div>
	</div>

	<div class="clearfix"></div>



<script type="text/javascript">
/*-----------------------------------------------------------------------------------------------------------------*/
	/************code for ticket state count*************/
/*-----------------------------------------------------------------------------------------------------------------*/
	var ticketStateList=[% JSON(Data.ticket_state_list) %];
	var ticketState = [% JSON(Data.ticket_state) %];
	var convertedStateArray = ticketState.map(function(stateValues) {
	   	return { name : stateValues.name,y: Number(stateValues.y) };
	});

	Highcharts.chart('stateBarReqDiv', {
	    chart: {
	        type: 'column'
	    },
	    title: {
	        text: 'Ticket State Count'
	    },
	    xAxis: {
	        type: 'category',
	        labels: {
	            rotation: -45,
	            style: {
	                fontSize: '13px',
	                fontFamily: 'Verdana, sans-serif'
	            }
	        }
	    },
	    yAxis: {
	        min: 0,
	        title: {
	            text: 'Count'
	        }
	    },
	    legend: {
	        enabled: false
	    },
	    tooltip: {
	        pointFormat: 'Count: <b>{point.y:1f}</b>'
	    },

	    credits: {
	        enabled: false
	    },

	    series: [{
	        name: 'Ticket',
	        data:convertedStateArray,
	        dataLabels: {
	            enabled: false,
	            rotation: -90,
	            color: '#FFFFFF',
	            align: 'right',
	            format: '{point.y:.1f}', /* one decimal*/
	            y: 10, /* 10 pixels down from the top*/
	            style: {
	                fontSize: '13px',
	                fontFamily: 'Verdana, sans-serif'
	            }
	        },
	        point:{
	           events:{
	               click: function (event) {
	                   window.location.href ="[% Env('Baselink') %]Action=AgentRequest;ColumnFilterState="+ticketStateList[event.point.options.name];

	               }
	           }
	        }
	    }]
	});


/*-----------------------------------------------------------------------------------------------------------------*/
	/***********code for open Requests dashboard**************/
/*-----------------------------------------------------------------------------------------------------------------*/

	openRequestGroup=[% JSON(Data.open_requestGroup) %];

	var OpenRequestArray = openRequestGroup.map(function(Requestprioritylist) {
	    	return Requestprioritylist.name;
	    	
	    });
	var OpenRequestConvertArray = openRequestGroup.map(function(OpenRequestConvertVal) {
	    	return Number(OpenRequestConvertVal.data[0]);  	
	    });

	Highcharts.chart('openRequest', {
	    chart: {
	        type: 'bar'
	    },
	    title: {
	        text: 'Open Requests-Grouped'
	    },

	    xAxis: {
	        categories: OpenRequestArray,
	        title: {
	            text: null
	        }
	    },
	    yAxis: {
	        min: 0,
	        title: {
	            text: 'Counts',
	        },
	        labels: {
	            overflow: 'justify'
	        }
	    },
	    tooltip: {
	        // valueSuffix: ' millions'
	    },
	    plotOptions: {
	        bar: {
	            dataLabels: {
	                enabled: false
	            }
	        }
	    },
	    
	    credits: {
	        enabled: false
	    },
	    series: [{
	    	name: 'Open',
	    	data:OpenRequestConvertArray,
	    	point:{
	           events:{
	               	click: function (event) {
	               		var priorityID = event.point.category.split('')
	                   	window.location.href ="[% Env('Baselink') %]Action=AgentRequest;ColumnFilterState=4;ColumnFilterPriority="+priorityID[1];

	               }
	           }
	        }
	    }]
	});


/*-----------------------------------------------------------------------------------------------------------------*/
	/********code for matrix dashboard***********/
/*-----------------------------------------------------------------------------------------------------------------*/
	PrioritysMatrixList=[% JSON(Data.PrioritysMatrixList) %];
	StatesMatrixList=[% JSON(Data.StatesMatrixList) %];
	TicketMatrix=[% JSON(Data.ticket_matrix) %];


	var TicketMatrixArray = TicketMatrix.map(function(ticketListVal) {
		return [Number(ticketListVal[0]), Number(ticketListVal[1]),Number(ticketListVal[2])];
	});

	Highcharts.chart('matrixRequestDiv', {

	    chart: {
	        type: 'heatmap',
	        marginTop: 40,
	        marginBottom: 80,
	        plotBorderWidth: 1
	    },


	    title: {
	        text: 'Requests by Priority and State'
	    },

	    xAxis: {
	        categories: PrioritysMatrixList,
	    },

	    yAxis: {
	        categories: StatesMatrixList,
	        title: null
	    },

	    colorAxis: {
	        min: 0,
	        minColor: '#FFFFFF',
	        maxColor: Highcharts.getOptions().colors[0]
	    },

	    legend: {
	        align: 'right',
	        layout: 'vertical',
	        margin: 0,
	        verticalAlign: 'top',
	        y: 25,
	        symbolHeight: 280
	    },

	    tooltip: {
	        formatter: function () {
	            return '<b>' + this.series.xAxis.categories[this.point.x] + '</b>  <br><b>' +
	                this.point.value + '</b><br><b>' + this.series.yAxis.categories[this.point.y] + '</b>';
	        }
	    },

	    credits: {
	        enabled: false
	    },

	    series: [{
	        name: 'Count',
	        borderWidth: 1,
	        data: TicketMatrixArray,
	        dataLabels: {
	            enabled: true,
	            color: '#000000'
	        },
	    }]

	});

/*-----------------------------------------------------------------------------------------------------------------*/
	//To create array of last 7 days
/*-----------------------------------------------------------------------------------------------------------------*/
	WeekDay="[% Data.WeekDay %]";
		WeekDayArray=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];
		yaxis=[];
		/***********To arrange last WeekDays*************/
		for (var i = 0; i < 7; i++) {
			if (WeekDay != WeekDayArray[0] ) {
				var Day=WeekDayArray.shift();
				WeekDayArray.push(Day);          
			}
		}

	//Count of Created and Closed Tickets
	var OpenStatsData =[% JSON(Data.ticket_OpenStatsData) %];
	var closeStatsData=[% JSON(Data.ticket_CloseStatsData) %];
	var OpenStatsArray=[];
	var CloseStatsArray=[];

	$.each(WeekDayArray, function(key,value){
		/*******if count exist of ticket created particular WeekDay then fill else zero*****/
		if (OpenStatsData[value]) {
			OpenStatsArray.push(parseInt(OpenStatsData[value]));
		} else {
			OpenStatsArray.push(0);
		}

		/******if count exist of ticket closed particular WeekDay then fill else zero******/
		if (closeStatsData[value]) {
			CloseStatsArray.push(parseInt(closeStatsData[value]));
		} else {
			CloseStatsArray.push(0);
		}

	});


	Highcharts.chart('OpenCloseStateReqDiv', {
	  chart: {
	    type: 'area',
	    inverted: false
	  },
	  title: {
	    text: 'Tickets Created-Closed in Last 7 Days'
	  },
	  subtitle: {
	    style: {
	      position: 'absolute',
	      right: '0px',
	      bottom: '10px'
	    }
	  },
	  legend: {
	    floating: false,
	  },
	  xAxis: {
	    categories: WeekDayArray
	  },
	  yAxis: {
	    title: {
	      text: 'Counts'
	    },
	    allowDecimals: false,
	    min: 0
	  },
	  plotOptions: {
	    area: {
	      fillOpacity: 0.5
	    }
	  },

	  credits: {
	        enabled: false
	    },

	  series: [{
	    name: 'Created',
	    data: OpenStatsArray,
	    point:{
	           events:{
	               click: function (event) {
	                   window.location.href ="[% Env('Baselink') %]Action=AgentTicketStatusView;Filter=Open;ColumnFilterType=3";

	               }
	           }
	        }
	  }, {
	    name: 'Closed',
	    data: CloseStatsArray,
	    point:{
	           events:{
	               click: function (event) {
	                   window.location.href ="[% Env('Baselink') %]Action=AgentTicketStatusView;Filter=Closed;ColumnFilterType=3";

	               }
	           }
	        }
	  }]
	});


/*-----------------------------------------------------------------------------------------------------------------*/
	/******************function for refresh the page*************/
/*-----------------------------------------------------------------------------------------------------------------*/

	setTimeout(function(){
        window.location.reload(1);
    }, 30000);
	/**************end function for refresh the page***************/
</script>

<style type="text/css">	
	.text-danger {
	  color: red;
	}
	div.location {
		cursor:pointer;
		height: 130px;
	}

	.info-box{border:none;}

	.panel-default>.panel-heading {
	    position: relative;
	    box-shadow: none;
	    border-right: none;
	    font-weight:700;
	}
</style>
